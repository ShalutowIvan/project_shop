# uvicron это как бы переводчик между питоном и nginx
#клиент отправляет запрос (или через сайт, мобильное приложение, постман, терминал и тд) на наш сервер
# через hhtps или http на 80 или 443 порт
#далее выступает reverse proxy сервер, чаще всего это nginx. Далее nginx передает запрос на ASGI, и ASGI передает это в наше приложение на fastapi написанное на питоне
#само приложение не умеет интегрироваться напрямую в сеть инета и ему нужны посредники, которые будут например защищать от ддос атак например, для этого нужен nginx. Но nginx не умеет работать с питоновскими приложениями. Для этого нужен uvicorn, он для взаимодействия в питоновским приложением. uvicorn асинхронный , если примерно то он переводит с питоновкого на язык nginx
#то есть прилетает запрос в nginx, он отправляет это в uvicorn, далее отправляется в наше приложение и обрабатывается какая-то логика приложения. Далее обратно по той же цепочке, fastapi--uvicorn--nginx--клиент
#fastapi основан на Starlette и Pydentic
# Starlette - ответчает за веб
# Pydentic - отвечает за сериализацию и валидацию. 
# проект у препода: платформа для обучения для студентов
#для юзеров лучше юзать uuid вместо id.
#инфа про докер есть в первом видео ост 15 мин:
# https://www.youtube.com/watch?v=UkwpJyvf8CA&list=PLlKID9PnOE5jiWTTsshCXdz5qvg8JWezX&ab_channel=luchanos
#он делает постгерс в докер файле. ВЕРНУТЬСЯ К ДОКЕРУ ПОЗЖЕ.
#немного поправил движок алхимии
#логика в добавлении пользователя:!!!!!!!!!!!!!!!!!!!!!
# он там сделал класс, это на 27 мин. В котором будет добавляться пользователь в сессию. Выглядит странно, но вроде норм. 

#также сделал базовый класс для схем pydentic и в нем прописал класс Config в котором прописал:
# orm_mode = True
#это чтобы Pydentic переводил все данные в Json, то есть в словари. Потом можно наследовать всех схемы на основе этого класса, а не BaseModel. 
# юзера валидировал как uuid.UUID в модели Pydentic, странно
#сделал еще валидаторы ФИО, чтобы должны быть только буквы в ФИО. Кажется верное решение. У меня просто name, типа логин. Мне наверно пока не надо.
#далее он валидирует роутер юзера схемой Pydentic которую он сделал для юзера
#в алембик можно писать не асинхронный psycopg2
#в постмане можно писать ссылки и тип запроса, там возвращается ответ от сервера. По сути похоже на доку фаст апи swagger. 

