# Generated by Django 5.0.1 on 2024-08-18 10:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Expense_number',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(default='_', max_length=255, verbose_name='Комментарий')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('state', models.BooleanField(default=False, verbose_name='состояние')),
            ],
            options={
                'verbose_name': 'Номер акта списания',
                'verbose_name_plural': 'Номера актов списания',
                'ordering': ['time_create'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_group', models.CharField(db_index=True, default='_', max_length=255, verbose_name='Название группы')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
                'ordering': ['name_group'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_org', models.CharField(default='_', max_length=255, verbose_name='Название организации')),
                ('inn_kpp', models.CharField(default='0', max_length=255, verbose_name='ИНН-КПП')),
                ('ogrn', models.IntegerField(default=0, verbose_name='ОГРН')),
                ('working_mode', models.CharField(default='_', max_length=255, verbose_name='Режим работы')),
                ('about', models.TextField(blank=True, verbose_name='О компании')),
                ('adres', models.CharField(default='_', max_length=255, verbose_name='Адрес организации')),
                ('phone', models.IntegerField(default=0, verbose_name='Телефон')),
                ('email_name', models.CharField(default='_', max_length=255, verbose_name='Электронная почта')),
                ('telegram', models.CharField(default='_', max_length=255, verbose_name='Контакты в Telegram')),
                ('whatsApp', models.CharField(default='_', max_length=255, verbose_name='Контакты в WhatsApp')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организация',
            },
        ),
        migrations.CreateModel(
            name='Receipt_number',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(default='_', max_length=255, verbose_name='Комментарий')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('state', models.BooleanField(default=False, verbose_name='состояние')),
            ],
            options={
                'verbose_name': 'Номер накладной',
                'verbose_name_plural': 'Номера накладных',
                'ordering': ['time_create'],
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_product', models.CharField(default='_', max_length=255, verbose_name='Название товара')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('vendor_code', models.CharField(default='_', max_length=255, verbose_name='Артикул')),
                ('price', models.DecimalField(decimal_places=2, max_digits=19, verbose_name='Цена')),
                ('photo', models.ImageField(upload_to='photos/%Y/%m/%d/', verbose_name='Фото')),
                ('stock', models.FloatField(verbose_name='Остаток')),
                ('availability', models.BooleanField(default=True, verbose_name='Доступность')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='shop.group', verbose_name='Группа товара')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['stock', 'name_product'],
                'index_together': {('id', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Expense_list',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_act', models.IntegerField(default=0, verbose_name='Номер акта списания')),
                ('quantity', models.FloatField(default=0, verbose_name='Количество')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.goods', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Список актов списания',
                'verbose_name_plural': 'Списки актов списания',
                'ordering': ['product'],
            },
        ),
        migrations.CreateModel(
            name='Order_list_bought',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(default='_', max_length=255, verbose_name='Покупатель')),
                ('phone', models.CharField(default='_', max_length=255, verbose_name='Телефон')),
                ('quantity', models.FloatField(default=0, verbose_name='Количество')),
                ('order_number', models.IntegerField(verbose_name='Номер заказа')),
                ('time_create', models.DateTimeField(verbose_name='Время создания')),
                ('delivery_address', models.CharField(default='_', max_length=255, verbose_name='Адрес организации')),
                ('state_order', models.BooleanField(default=False, verbose_name='состояние заказа')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.goods', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Список заказов',
                'verbose_name_plural': 'Списки заказов',
                'ordering': ['time_create', 'product_id'],
            },
        ),
        migrations.CreateModel(
            name='Receipt_list',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_receipt', models.IntegerField(default=0, verbose_name='Номер накладной')),
                ('quantity', models.FloatField(default=0, verbose_name='Количество')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.goods', verbose_name='Товар')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Список приходных документов',
                'verbose_name_plural': 'Списки приходных документов',
                'ordering': ['product'],
            },
        ),
    ]
